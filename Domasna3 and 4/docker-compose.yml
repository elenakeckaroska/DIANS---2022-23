# Define services
services:
  # App backend service
  back-end:
    # Configuration for building the docker image for the backend service
    build:
      context: spring-backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    #restart: always
    environment: # Pass environment variables to the service
      spring.profiles.active: prod
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - accommodations
    depends_on:
      - db
       #  condition: service_healthy
  # Frontend Service
  front-end:
    build:
      context: frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000" # Map the exposed port 80 on the container to port 3000 on the host machine
    #restart: always
    depends_on:
      - back-end
    networks:
      - accommodations

  db:
    build:
      context: database
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: accommodations
    expose:
      - "5432"
    ports:
      - 5432:5432
    networks:
      - accommodations
    command: -p 5432
    container_name: springboot-postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 7s
      timeout: 7s
      retries: 5
# Networks to be created to facilitate communication between containers
networks:
  accommodations:
